trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  tf_state_rg: "az800"
  tf_state_location: "eastus"
  tf_state_sa_name: "tfdemo19752004"
  tf_state_container_name: "tfstate"
  tf_state_tags: "env=blogpost-terraform-devops-pipeline deployedBy=devops"
  tf_environment: "dev"
  ARM_SUBSCRIPTION_ID: "49c56ee8-d443-4854-a62c-3a0aae84ac6f"
  ARM_TENANT_ID: "be04fbd5-6b00-412c-a86c-ca105b5cce90"
  ARM_CLIENT_ID: "0b381472-3197-49d4-a324-f1a96a23c8a7"
  ARM_CLIENT_SECRET: "t8P8Q~Yb4L8Dn~oj9t5GPzFOROUqJM4VJXTTBbLH"

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.x'
    addToPath: true

- script: |
    echo "##vso[task.prependpath]/usr/local/bin"
  displayName: 'Add /usr/local/bin to PATH'

- task: AzureCLI@2
  displayName: "Create/Check the Terraform Statefile Azure Storage Account"
  inputs:
    azureSubscription: "Azuretfsvc1"
    addSpnToEnvironment: true
    scriptType: "bash"
    scriptLocation: "inlineScript"
    inlineScript: |
      TAGS=$(echo $tf_state_tags | tr " " ",")
      az group create --name $(tf_state_rg) --location $(tf_state_location) --tags "${TAGS}"
      ACCOUNT_KEY=$(az storage account keys list --resource-group $(tf_state_rg) --account-name $(tf_state_sa_name) --query [0].value -o tsv)
      az storage container create --name $(tf_state_container_name) --account-name $(tf_state_sa_name) --account-key $ACCOUNT_KEY
      echo "##vso[task.setvariable variable=tf_state_sa_key]$ACCOUNT_KEY"

- script: |
    /usr/local/bin/terraform init -backend-config="storage_account_name=$(tf_state_sa_name)" -backend-config="container_name=$(tf_state_container_name)" -backend-config="key=$(tf_environment).terraform.tfstate" -backend-config="subscription_id=$ARM_SUBSCRIPTION_ID" -backend-config="tenant_id=$ARM_TENANT_ID" -backend-config="client_id=$ARM_CLIENT_ID" -backend-config="client_secret=$ARM_CLIENT_SECRET"
  displayName: 'Initialize Terraform'

- script: |
    /usr/local/bin/terraform plan
  displayName: 'Terraform Plan'

- script: |
    /usr/local/bin/terraform apply -auto-approve
  displayName: 'Terraform Apply'

- task: AzureCLI@2
  inputs:
    azureSubscription: "Azuretfsvc1"
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      az storage blob upload --container-name $(tf_state_container_name) --account-name $(tf_state_sa_name) --name terraform.tfstate --file terraform.tfstate
      rm -rf ~/.azure/credentials*
  displayName: 'Upload Blob and Cleanup'
